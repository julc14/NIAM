@page "/"

<PageTitle>Name It After Me!</PageTitle>

<MudContainer MaxWidth=MaxWidth.ExtraLarge>
    <MudPaper Style="background-color:var(--mud-palette-black)">

        <MudGrid Spacing="0">

            <MudItem xs="12">
                <MudCard Square="true" Style="margin:20px" Elevation="10">
                    <MudCardContent>
                        <MudText Typo=Typo.h3 Align=Align.Center>Name It After Me!</MudText>
                    </MudCardContent>
                </MudCard>
            </MudItem>

            <MudItem xs="6">

                <MudCard Style="margin:20px" Elevation="10" Square="true">
                    @if (_exoplanetCount is not null)
                    {
                        <MudCardContent>
                            <MudText Typo=Typo.body1>Total Exoplanets: @_exoplanetCount.TotalExoplanets</MudText>
                            <MudText Typo=Typo.body1>Named Exoplanets: @_exoplanetCount.NamedExoplanets</MudText>
                        </MudCardContent>
                    }
                </MudCard>

                <MudCard Style="margin:20px; height:180px" Elevation="10" Square="true" />

                @if (_exoplanets is not null)
                {
                    <MudCarousel Style="height:450px;clip-path:initial" ItemsSource=@_exoplanets Context="planet" AutoCycle=@_carouselRotating>
                        <ItemTemplate>
                            <PlanetCard
                                Square="true"
                                Style="margin-right:20px;margin-left:20px"
                                Elevation="10"
                                Exoplanet=@planet
                                IsOverlayVisableChanged="isVisable => SetCarouselRotating(!isVisable)" />
                        </ItemTemplate>
                    </MudCarousel>
                }
                else
                {
                    <MudCard Style="margin:20px;height:450" Elevation="10" Square="true">
                        <MudSkeleton Height="390px" SkeletonType="SkeletonType.Rectangle" Animation="Animation.Wave" />
                    </MudCard>
                }
            </MudItem>

            <MudItem xs="6">

                @if (_imagePath is not null)
                {
                    <MudCard Style="width:97%; margin-right:20px; margin-top:20px; margin-botton:20px;" Elevation="10" Square="true" >
                        <MudCardHeader>
                            <CardHeaderAvatar>
                                <MudIcon 
                                    Color="Color.Dark"
                                    Icon="@Icons.Material.Filled.RocketLaunch"
                                    Size="Size.Large" />
                            </CardHeaderAvatar>
                            <CardHeaderContent>
                                <MudText Typo="Typo.body1">Nasa's Picture Of The Day</MudText>
                                <MudText Typo="Typo.caption">@DateTime.Now.ToShortDateString()</MudText>
                            </CardHeaderContent>
                            <CardHeaderActions>
                                <MudIconButton 
                                    Icon="@Icons.Material.Filled.Download"
                                    Color="Color.Default"
                                    Href="@_imagePath" />
                            </CardHeaderActions>
                        </MudCardHeader>

                        <MudImage 
                            ObjectFit="ObjectFit.Cover"
                            Style="width:100%; padding:10px;"    
                            Src=@_imagePath
                            Height="590" />
                        </MudCard>
                    }
                    else
                    {
                        <MudCard Style="width:97; margin-right:20px; margin-top:20px; margin-botton:20px;" Elevation="10" Square="true" >
                            <MudCardHeader>
                                <CardHeaderAvatar>
                                    <MudSkeleton SkeletonType="SkeletonType.Circle" Animation="Animation.Wave" Height="40px" Width="40px"/>
                                </CardHeaderAvatar>
                                <CardHeaderContent>
                                    <MudSkeleton Animation="Animation.Wave" Width="40%" />
                                    <MudSkeleton Animation="Animation.Wave" Width="60%" />
                                </CardHeaderContent>
                            </MudCardHeader>

                            <MudSkeleton SkeletonType="SkeletonType.Rectangle" Animation="Animation.Wave" Height="590px" />
                        </MudCard>
                    }
                </MudItem>
        </MudGrid>
    </MudPaper>
</MudContainer>

@code
{
    private ExoplanetCountDto? _exoplanetCount;
    private bool _carouselRotating = true;
    private string? _imagePath;

    private IEnumerable<ExoplanetDto>? _exoplanets;

    [Inject] 
    public HttpClient HttpClient { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        _exoplanetCount = await HttpClient.GetFromJsonAsync(new GetExoplanetCount());

        _exoplanets = await HttpClient.GetFromJsonAsync(new GetExoplanets()
        {
            PageSize = 6,
            PageNumber = Random.Shared.Next(1, 10),
        });

        StateHasChanged();

        // todo: cache to reduce server hits
        _imagePath = await HttpClient.GetFromJsonAsync(new GetPictureOfTheDaySourcePath());
    }

    private void SetCarouselRotating(bool shouldRotate) => _carouselRotating = shouldRotate;
}