@page "/"

<PageTitle>Name It After Me!</PageTitle>

<MudContainer MaxWidth=MaxWidth.Large>
    <MudGrid>

        <MudItem xs="12">
            <MudCard Outlined=@true>
                <MudCardContent>
                    <MudText Typo=Typo.h3 Align=Align.Center>Name It After Me!</MudText>
                </MudCardContent>
            </MudCard>
        </MudItem>

        <MudItem xs="6">
            <MudCard>
                <MudCardContent>
                    <MudText Typo=Typo.body1>Total Exoplanets: @_totalExoplanets</MudText>
                    <MudText Typo=Typo.body1>Named Exoplanets: @_namedExoplanets</MudText>
                </MudCardContent>
            </MudCard>

            @*todo: placeholder*@
            <div style="height:230px"></div>

            @if (_exoplanets?.Any() == true)
            {
                <MudCarousel 
                        Style="height:450px;clip-path:initial" 
                        ItemsSource=@_exoplanets 
                        Context="planet" 
                        AutoCycle=@_carouselRotating>
                    <ItemTemplate>
                        <PlanetCard Exoplanet=@planet/>
                    </ItemTemplate>
                </MudCarousel>
            }
        </MudItem>

        <MudItem xs="6">
            <MudCard Style="width:min-content; margin:auto;">
                <MudCardHeader>
                    <CardHeaderAvatar>
                        <MudIcon Color="Color.Dark"
                                 Icon="@Icons.Material.Filled.RocketLaunch"
                                 Size="Size.Large" />
                    </CardHeaderAvatar>
                    <CardHeaderContent>
                        <MudText Typo="Typo.body1">Nasa's Picture Of The Day</MudText>
                        <MudText Typo="Typo.caption">@DateTime.Now.ToShortDateString()</MudText>
                    </CardHeaderContent>
                    <CardHeaderActions>
                        <MudIconButton Icon="@Icons.Material.Filled.Download"
                                       Color="Color.Default"
                                       Href="@imagePath" />
                    </CardHeaderActions>
                </MudCardHeader>

                @if (@imagePath is not null)
                {
                    <MudImage Style="display:flex; margin:auto; padding:10px"
                          Src=@imagePath
                          Class="rounded-lg"
                          ObjectFit="ObjectFit.Contain"
                          Width = "605"
                          Height="630" />
                }
            </MudCard>
        </MudItem>
    </MudGrid>
</MudContainer>

@code
{
    private int _totalExoplanets;
    private int _namedExoplanets;

    private bool _carouselRotating = true;

    private string? imagePath;

    private IEnumerable<ExoplanetDto>? _exoplanets;

    [Inject] HttpClient HttpClient { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        await SetExoplanetCountFields();

        // todo: cache to reduce server hits
        imagePath = await HttpClient.GetFromJsonAsync<string>("PictureOfTheDay/SourcePath");
    }

    private void SetCarouselRotating(bool shouldRotate)
    {
        _carouselRotating = shouldRotate;
    }

    private async ValueTask SetExoplanetCountFields()
    {
        _namedExoplanets = await HttpClient.GetFromJsonAsync(new GetExoplanetCount()
        {
            ExcludeUnnamedExoplanets = true,
        });

        _totalExoplanets = await HttpClient.GetFromJsonAsync(new GetExoplanetCount());

        _exoplanets = await HttpClient.GetFromJsonAsync(new GetExoplanets()
        {
            PageSize = 6,
            PageNumber = Random.Shared.Next(1, 10),
        });
    }
}