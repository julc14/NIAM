<MudOverlay @bind-Visible="IsVisable" DarkBackground="true">
    <MudTabs Outlined="true"
             Position="@Position.Left" 
             Rounded="true" 
             Border="true"
             ApplyEffectsToContainer="true" 
             Class="mt-8" 
             TabPanelClass="pa-3">
        <MudTabPanel Text="Exoplanet Details">
            <MudPaper Height="@Height" Width="@Width" Class="pa-6">
                <MudStack>
                    <MudPaper Elevation="@PaperElevation" Class="pa-4">
                        <MudStack Row="true">

                            <MudAvatar Image="@PlanetImagePath" Size="Size.Large" />

                            <MudStack Justify="Justify.Center" Spacing="ContentSpacing">
                                <MudText Typo="Typo.body1">Exoplanet</MudText>
                                <MudText Typo="Typo.body2">@Exoplanet.Name</MudText>
                            </MudStack>

                        </MudStack>
                    </MudPaper>
                    <MudPaper Elevation="@PaperElevation" Class="pa-4">
                        <MudStack Row="true">

                            <MudAvatar Image="/Images/Star1.jpeg" Size="Size.Large" />

                            <MudStack Justify="Justify.Center" Spacing="ContentSpacing">
                                <MudText Typo="Typo.body1">Star's Name</MudText>
                                <MudText Typo="Typo.body2">@Exoplanet.HostName</MudText>
                            </MudStack>

                        </MudStack>
                    </MudPaper>
                    <MudPaper Elevation="@PaperElevation" Class="pa-4">
                        <MudStack Row="true">

                            <MudStack Justify="Justify.Center" Spacing="ContentSpacing">
                                <MudText Typo="Typo.body1">Distance From Earth</MudText>
                                <MudText Typo="Typo.body2">@Exoplanet.Distance Parsecs</MudText>
                            </MudStack>

                        </MudStack>
                    </MudPaper>
                </MudStack>
            </MudPaper>
        </MudTabPanel>
        <MudTabPanel Text="Naming Schemes">
            <MudPaper Height="@Height" Width="@Width" Class="pa-6">

                <MudStack Row="true">
                    <MudForm>
                        <MudTextField T="string" Label="Your Name" Required="true" TextChanged=@OnNameChange />
                    </MudForm>

                    <MudRadioGroup Style="padding=6px" @bind-SelectedOption="@_scheme" >
                        
                        <div style="overflow:scroll;max-height:300px;sc">

                            <MudStack Spacing=0>

                            @foreach (var scheme in Enum.GetValues<NamingScheme>())
                            {
                                 <MudRadio Color="Color.Primary" Option="@scheme">@scheme</MudRadio>
                            }

                            </MudStack>

                        </div>

                    </MudRadioGroup>

                </MudStack>
            </MudPaper>
        </MudTabPanel>

        <MudTabPanel Text="Background">
            <MudPaper Height="@Height" Width="@Width" Class="pa-6">

                

            </MudPaper>
        </MudTabPanel>

        <MudTabPanel Text="Submit">
            <MudPaper Height="@Height" Width="@Width" Class="pa-6">

                

            </MudPaper>
        </MudTabPanel>

    </MudTabs>
</MudOverlay>

@code {
    [Parameter, EditorRequired] public string PlanetImagePath { get; set; } = null!;
    [Parameter, EditorRequired] public ExoplanetDto Exoplanet { get; set; } = null!;

    [Parameter] public bool IsVisable { get; set; }

    [Parameter] public int ContentSpacing { get; set; }
    [Parameter] public int PaperElevation { get; set; } = 5;

    [Parameter] public string Height { get; set; } = "350px";
    [Parameter] public string Width { get; set; } = "500px";

    [Inject] public HttpClient HttpClient { get; set; } = null!;

    private IEnumerable<StoryDto> _stories;

    private string? _name;
    private NamingScheme _scheme;

    protected override async Task OnInitializedAsync()
    {
        _stories = await HttpClient.GetFromJsonAsync<IEnumerable<StoryDto>>("Story");
    }

    private void OnNameChange(string currentValue)
    {
        _name = currentValue;
        StateHasChanged();
    }

    private enum NamingScheme
    {
        Endeavor,
        Exchange,
        Razor,
        Creed,
        Hazard,
        Horizon,
        Outcast,
        Odyssey
    }
}