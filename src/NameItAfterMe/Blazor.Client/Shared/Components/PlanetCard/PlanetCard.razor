<MudCard Elevation="@Elevation" Outlined=@Outlined Style="@Style" Square=@Square>
    <PlanetCardHeader Name=@Exoplanet.Name />
    <MudCardMedia Image="@_imagePath" Height="200" />
    <MudCardContent>
        <MudText Typo="Typo.body2"></MudText>
    </MudCardContent>
    <PlanetCardActions OnSaveClick="() => IsOverlayVisable = true" />
</MudCard>

<SubmissionOverlay Exoplanet=@Exoplanet
                   PlanetImagePath=@_imagePath
                   @bind-IsVisable="@IsOverlayVisable" />

@code {
    private string? _imagePath;
    private bool _isOverlayVisable;

    private bool IsOverlayVisable
    {
        get => _isOverlayVisable;
        set
        {
            if (_isOverlayVisable == value)
                return;

            _isOverlayVisable = value;

            if (IsOverlayVisableChanged.HasDelegate)
            {
                IsOverlayVisableChanged.InvokeAsync(_isOverlayVisable);
            }
        }
    }

    [Inject]
    public HttpClient HttpClient { get; set; } = null!;

    [Parameter, EditorRequired]
    public ExoplanetDto Exoplanet { get; set; } = null!;

    [Parameter]
    public EventCallback<bool> IsOverlayVisableChanged { get; set; }

    [Parameter]
    public int Elevation { get; set; }

    [Parameter]
    public bool Outlined { get; set; }

    [Parameter]
    public bool Square { get; set;  }

    [Parameter]
    public string Style { get; set; } = "";

    protected override async Task OnInitializedAsync()
    {
        _imagePath = await HttpClient.GetFromJsonAsync(new GetExoplanetImageSourcePath());
    }
}