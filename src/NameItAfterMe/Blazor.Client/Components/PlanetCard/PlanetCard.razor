<MudCard Elevation="@Elevation" Outlined="@Outlined" Style="@Style" Square="@Square">
    <PlanetCardHeader Exoplanet="@Exoplanet" />
    <MudCardMedia Image="@Exoplanet.ImageUrl" Height="200" />
    <MudCardContent>
        <MudText Inline="true" Color="Color.Primary" Typo="Typo.body2">@Exoplanet.Name</MudText> is orbiting @Exoplanet.HostName at a distance of <MudText Inline="true" Color="Color.Primary" Typo="Typo.body2">@Exoplanet.Distance @Exoplanet.DistanceUnits</MudText> from Earth!
    </MudCardContent>
    <PlanetCardActions OnSaveClick="() => IsOverlayVisible = true" />
</MudCard>

<SubmissionOverlay 
    Exoplanet="@Exoplanet"
    OnExoplanetNamed="@OnExoplanetNamed"
    PlanetImagePath="@Exoplanet.ImageUrl"
    @bind-IsVisible="@IsOverlayVisible" />

@code {
    private bool _isOverlayVisible;

    private bool IsOverlayVisible
    {
        get => _isOverlayVisible;
        set
        {
            if (_isOverlayVisible == value)
                return;

            _isOverlayVisible = value;

            if (IsOverlayVisibleChanged.HasDelegate)
            {
                IsOverlayVisibleChanged.InvokeAsync(_isOverlayVisible);
            }
        }
    }

    [Parameter, EditorRequired]
    public required ExoplanetDto Exoplanet { get; set; }

    [Parameter]
    public EventCallback<bool> IsOverlayVisibleChanged { get; set; }

    [Parameter] 
    public EventCallback<string> OnExoplanetNamed { get; set; }

    [Parameter]
    public int Elevation { get; set; }

    [Parameter]
    public bool Outlined { get; set; }

    [Parameter]
    public bool Square { get; set;  }

    [Parameter]
    public string Style { get; set; } = "";
}