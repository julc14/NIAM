<OverlayTabTemplate >

    <MudSelect 
        Variant="Variant.Outlined" 
        T="string" 
        Value="State.StoryName ?? string.Empty"
        ValueChanged="StoryChanged" >

        @foreach (var story in _stories)
        {
            <MudSelectItem Value=story.Name />
        }

    </MudSelect>

    <MudForm>
        <MudGrid Spacing="1" Style="margin-top:20px">
            @foreach (var descriptor in State.WordDescriptors)
            {
                <MudItem xs="4">
                    <MudTextField ValueChanged="(value) => descriptor.Value = value"
                        Value="descriptor.Value" 
                        Variant=" Variant.Outlined" 
                        T="string" 
                        Label="@descriptor.Key" />
                </MudItem>
            }
        </MudGrid>
    </MudForm>

</OverlayTabTemplate >

@code {
    private IEnumerable<StoryDto> _stories = Enumerable.Empty<StoryDto>();

    [Inject]
    public required HttpClient HttpClient { get; set; }

    [Parameter, EditorRequired]
    public required NameExoplanetOperationState State { get; set; }

    protected override async Task OnInitializedAsync()
    {
        // todo: low frequency changes to db content, cache client side?
        _stories = await HttpClient.GetFromJsonAsync(new GetStories()) ?? Enumerable.Empty<StoryDto>();
    }

    private void StoryChanged(string story)
    {
        var dto = _stories.First(x => x.Name == story);

        State.StoryName = dto.Name;
        State.WordDescriptors = dto.WordDescriptor.Select(x => new WordDescriptor { Key = x, Value = string.Empty }).ToList();
    }
}
