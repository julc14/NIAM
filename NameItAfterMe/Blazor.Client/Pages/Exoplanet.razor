@page "/exoplanet"

<div class="page-background-class">
	<InfiniteScrolling ItemsProvider=@GetExoplanets>
		<ItemTemplate Context="item">
			<MudContainer MaxWidth="MaxWidth.Small" Class="pa-2">
				<PlanetCard Name=@item.Name />
			</MudContainer>
		</ItemTemplate>
		<LoadingTemplate>
			<MudContainer MaxWidth="MaxWidth.Small" Class="pa-2">
				<MudCard>
					<MudSkeleton SkeletonType="SkeletonType.Rectangle" Height="218.03px" />
					<MudCardContent>
						<MudSkeleton Width="30%" Height="42px;" />
						<MudSkeleton Width="80%" />
						<MudSkeleton Width="100%" />
					</MudCardContent>
					<MudCardActions>
						<MudSkeleton Width="64px" Height="40px" Class="ml-2" />
						<MudSkeleton Width="105px" Height="40px" Class="ml-3" />
					</MudCardActions>
				</MudCard>
				<MudCard>
					<MudSkeleton SkeletonType="SkeletonType.Rectangle" Height="218.03px" />
					<MudCardContent>
						<MudSkeleton Width="30%" Height="42px;" />
						<MudSkeleton Width="80%" />
						<MudSkeleton Width="100%" />
					</MudCardContent>
					<MudCardActions>
						<MudSkeleton Width="64px" Height="40px" Class="ml-2" />
						<MudSkeleton Width="105px" Height="40px" Class="ml-3" />
					</MudCardActions>
				</MudCard>
				<MudCard>
					<MudSkeleton SkeletonType="SkeletonType.Rectangle" Height="218.03px" />
					<MudCardContent>
						<MudSkeleton Width="30%" Height="42px;" />
						<MudSkeleton Width="80%" />
						<MudSkeleton Width="100%" />
					</MudCardContent>
					<MudCardActions>
						<MudSkeleton Width="64px" Height="40px" Class="ml-2" />
						<MudSkeleton Width="105px" Height="40px" Class="ml-3" />
					</MudCardActions>
				</MudCard>
			</MudContainer>
		</LoadingTemplate>
	</InfiniteScrolling>
</div>

@code {

	[Inject] HttpClient HttpClient { get; set; } = null!;

	private readonly int _planetLoadSize = 10;
	private int _currentPage = 1;

	private async Task<IEnumerable<ExoplanetDto>> GetExoplanets(InfiniteScrollingItemsProviderRequest request)
	{
		var exoplanetRoute = $"Exoplanet/{_currentPage}/{_planetLoadSize}";

		var exoplanetGet =
			await HttpClient.GetFromJsonAsync<IEnumerable<ExoplanetDto>>(exoplanetRoute, request.CancellationToken);

		_currentPage++;

		return exoplanetGet ?? Enumerable.Empty<ExoplanetDto>();
	}
}